// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  uuid                String                @id @default(uuid())
  name                String          
  email               String                @unique
  password            String          
  status              user_status           @default(ACTIVE)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  user_items          user_items?
  notifications       notifications[]
  group_member        group_members[]
  groups_staff        group_staffs[]
}

enum user_status {
  ACTIVE
  INACTIVE
}

model user_items {
  uuid      String     @id @default(uuid())
  user      user       @relation(fields: [userId], references: [uuid])
  userId    String     @unique
}

model notifications {
  id                  Int            @id @default(autoincrement())
  user                user           @relation(fields: [userId], references: [uuid])  
  userId              String         
  title               String          
  description         String?
  read                Boolean?       @default(false)
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
}

model groups {
  uuid                String            @id @default(uuid())
  title               String
  description         String?
  visibility          group_status      @default(PUBLIC)
  staffs              group_staffs[] 
  members             group_members[]
  links               group_links[]
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt
}

enum group_status {
  PUBLIC
  PRIVATE
}

model group_links {
  id                  String            @id @default(uuid())
  title               String            
  url                 String          
  groups              groups            @relation(fields: [groupId], references: [uuid])
  groupId             String
}

model group_staffs {
  id                  Int            @id @default(autoincrement())
  groups              groups         @relation(fields: [groupId], references: [uuid])
  groupId             String
  staff               user           @relation(fields: [staffId], references: [uuid]) 
  staffId             String
}

model group_members {
  id                  Int            @id @default(autoincrement())
  groups              groups         @relation(fields: [groupId], references: [uuid])
  groupId             String
  user                user           @relation(fields: [userId], references: [uuid]) 
  userId              String
}